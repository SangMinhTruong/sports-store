@model SportsStore.Models.Product

@{
    ViewData["Title"] = "Edit";
}
<link href="https://unpkg.com/dropzone/dist/dropzone.css" rel="stylesheet"/>
<script src="https://unpkg.com/dropzone"></script>
<link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet"/>
 <script src="https://unpkg.com/cropperjs"></script>
<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Brand" class="control-label"></label>
                <input asp-for="Brand" class="form-control" />
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <input asp-for="Category" class="form-control" />
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImportPrice" class="control-label"></label>
                <input asp-for="ImportPrice" class="form-control" />
                <span asp-validation-for="ImportPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div class="dropzone" id="myDropzone"></div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<script>
Dropzone.options.myDropzone = {
 url: '/Photo/AddPhoto/'+@Model.ID,
 method: 'post',
 transformFile: function(file, done) { 
     // Create Dropzone reference for use in confirm button click handler
  var myDropZone = this;
       // Create the image editor overlay
  var editor = document.createElement('div');
  editor.style.position = 'fixed';
  editor.style.left = 0;
  editor.style.right = 0;
  editor.style.top = 0;
  editor.style.bottom = 0;
  editor.style.zIndex = 9999;
  editor.style.backgroundColor = '#000';
  document.body.appendChild(editor);
  // Create confirm button at the top left of the viewport
  var buttonConfirm = document.createElement('button');
  buttonConfirm.style.position = 'absolute';
  buttonConfirm.style.left = '10px';
  buttonConfirm.style.top = '10px';
  buttonConfirm.style.zIndex = 9999;
  buttonConfirm.textContent = 'Confirm';
  editor.appendChild(buttonConfirm);
  buttonConfirm.addEventListener('click', function() {
    // Get the canvas with image data from Cropper.js
    var canvas = cropper.getCroppedCanvas({
    width: 256,
    height: 256
    });
    // Turn the canvas into a Blob (file object without a name)
    canvas.toBlob(function(blob) {
           // Create a new Dropzone file thumbnail
      myDropZone.createThumbnail(
        blob,
        myDropZone.options.thumbnailWidth,
        myDropZone.options.thumbnailHeight,
        myDropZone.options.thumbnailMethod,
        false, 
        function(dataURL) {
          
          // Update the Dropzone file thumbnail
          myDropZone.emit('thumbnail', file, dataURL);
          // Return the file to Dropzone
          done(blob);
      });
    // Return the file to Dropzone
    done(blob);
  });
    // Remove the editor from the view
    document.body.removeChild(editor);
  });
  // Create an image node for Cropper.js
  var image = new Image();
  image.src = URL.createObjectURL(file);
  editor.appendChild(image);
  
  // Create Cropper.js
  var cropper = new Cropper(image, { aspectRatio: 1 });
  
  }
};
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
