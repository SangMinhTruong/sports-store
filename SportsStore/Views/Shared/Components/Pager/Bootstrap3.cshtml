@model ReflectionIT.Mvc.Paging.IPagingList
@* Boostrap 3 based pager *@

@{
    var start = this.Model.StartPageIndex;
    var stop = this.Model.StopPageIndex;
}
<ul class="store-pages">
    <li><span class="text-uppercase">Page:</span></li>

    @if (start > 1)
    {
        <li>
            <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(1))" aria-label="First">
                <span aria-hidden="true">1</span>
            </a>
        </li>
    }

    @if (this.Model.PageIndex > 1)
    {
        <li>
            <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex - 1))" aria-label="Previous">
                <span aria-hidden="true"><i class="fa fa-caret-left"></i></span>
            </a>
        </li>
    }

    @for (int i = start; i <= stop; i++)
    {
        @if (Model.PageIndex == i)
        {
            <li class="active">
                @i.ToString()
            </li>
        }
        else
        {
            <li class="active">
                @Html.ActionLink(i.ToString(), Model.Action, Model.GetRouteValueForPage(i))
            </li>
        }
    }

    @if (this.Model.PageIndex < this.Model.PageCount)
    {
        <li>
            <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageIndex + 1))" aria-label="Next">
                <span aria-hidden="true"><i class="fa fa-caret-right"></i></span>
            </a>
        </li>
    }

    @if (stop < this.Model.PageCount)
    {
        <li>
            <a href="@Url.Action(Model.Action, Model.GetRouteValueForPage(this.Model.PageCount))" aria-label="Last">
                <span aria-hidden="true">@this.Model.PageCount</span>
            </a>
        </li>
    }

</ul>